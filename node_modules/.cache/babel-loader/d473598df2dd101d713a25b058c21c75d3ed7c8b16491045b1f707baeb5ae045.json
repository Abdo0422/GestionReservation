{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abdo loubachi\\\\Downloads\\\\frontend\\\\src\\\\components\\\\ReservationList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Container, Typography, List, ListItem, ListItemText, Card, CardContent, Grid, Box } from \"@mui/material\";\nimport axios from \"axios\";\nimport { DateTime } from \"luxon\"; // Importing Luxon for date formatting\nimport Calendar from 'react-calendar'; // You can install react-calendar for calendar view\nimport 'react-calendar/dist/Calendar.css'; // Adding the CSS for calendar\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ReservationList() {\n  _s();\n  const [reservations, setReservations] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  useEffect(() => {\n    const fetchReservations = async () => {\n      try {\n        const response = await axios.get(\"http://127.0.0.1:5000/api/reservations\");\n        setReservations(response.data);\n      } catch (error) {\n        alert(\"Erreur lors de la récupération des réservations.\");\n      }\n    };\n    fetchReservations();\n  }, []);\n\n  // Filter reservations by selected date\n  const filteredReservations = reservations.filter(reservation => {\n    const reservationDate = DateTime.fromISO(reservation.date);\n    return reservationDate.hasSame(DateTime.fromJSDate(selectedDate), 'day');\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      align: \"center\",\n      sx: {\n        fontWeight: 'bold'\n      },\n      children: \"Liste des R\\xE9servations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginBottom: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Calendar, {\n        onChange: setSelectedDate,\n        value: selectedDate,\n        tileClassName: \"calendar-tile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: filteredReservations.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        color: \"textSecondary\",\n        align: \"center\",\n        sx: {\n          width: '100%'\n        },\n        children: \"Aucune r\\xE9servation pour cette date.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this) : filteredReservations.map((reservation, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            boxShadow: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              sx: {\n                fontWeight: 'bold'\n              },\n              children: [reservation.space, \" - \", reservation.resource]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              children: \"Le \".concat(DateTime.fromISO(reservation.date).toLocaleString(DateTime.DATE_FULL), \" \\xE0 \").concat(DateTime.fromISO(reservation.time).toLocaleString(DateTime.TIME_SIMPLE))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(ReservationList, \"oUfofE0tl2UaK/Y0EzVrKa9qF3A=\");\n_c = ReservationList;\nexport default ReservationList;\nvar _c;\n$RefreshReg$(_c, \"ReservationList\");","map":{"version":3,"names":["React","useEffect","useState","Container","Typography","List","ListItem","ListItemText","Card","CardContent","Grid","Box","axios","DateTime","Calendar","jsxDEV","_jsxDEV","ReservationList","_s","reservations","setReservations","selectedDate","setSelectedDate","Date","fetchReservations","response","get","data","error","alert","filteredReservations","filter","reservation","reservationDate","fromISO","date","hasSame","fromJSDate","children","variant","gutterBottom","align","sx","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","marginBottom","onChange","value","tileClassName","container","spacing","length","color","width","map","index","item","xs","sm","md","flexDirection","boxShadow","space","resource","concat","toLocaleString","DATE_FULL","time","TIME_SIMPLE","_c","$RefreshReg$"],"sources":["C:/Users/abdo loubachi/Downloads/frontend/src/components/ReservationList.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Box,\r\n} from \"@mui/material\";\r\nimport axios from \"axios\";\r\nimport { DateTime } from \"luxon\"; // Importing Luxon for date formatting\r\nimport Calendar from 'react-calendar'; // You can install react-calendar for calendar view\r\nimport 'react-calendar/dist/Calendar.css'; // Adding the CSS for calendar\r\n\r\nfunction ReservationList() {\r\n  const [reservations, setReservations] = useState([]);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n\r\n  useEffect(() => {\r\n    const fetchReservations = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          \"http://127.0.0.1:5000/api/reservations\"\r\n        );\r\n        setReservations(response.data);\r\n      } catch (error) {\r\n        alert(\"Erreur lors de la récupération des réservations.\");\r\n      }\r\n    };\r\n\r\n    fetchReservations();\r\n  }, []);\r\n\r\n  // Filter reservations by selected date\r\n  const filteredReservations = reservations.filter((reservation) => {\r\n    const reservationDate = DateTime.fromISO(reservation.date);\r\n    return reservationDate.hasSame(DateTime.fromJSDate(selectedDate), 'day');\r\n  });\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h4\" gutterBottom align=\"center\" sx={{ fontWeight: 'bold' }}>\r\n        Liste des Réservations\r\n      </Typography>\r\n\r\n      {/* Calendar to select date */}\r\n      <Box sx={{ display: 'flex', justifyContent: 'center', marginBottom: '20px' }}>\r\n        <Calendar\r\n          onChange={setSelectedDate}\r\n          value={selectedDate}\r\n          tileClassName=\"calendar-tile\"\r\n        />\r\n      </Box>\r\n\r\n      {/* Reservation List */}\r\n      <Grid container spacing={2}>\r\n        {filteredReservations.length === 0 ? (\r\n          <Typography variant=\"h6\" color=\"textSecondary\" align=\"center\" sx={{ width: '100%' }}>\r\n            Aucune réservation pour cette date.\r\n          </Typography>\r\n        ) : (\r\n          filteredReservations.map((reservation, index) => (\r\n            <Grid item xs={12} sm={6} md={4} key={index}>\r\n              <Card sx={{ display: 'flex', flexDirection: 'column', boxShadow: 3 }}>\r\n                <CardContent>\r\n                  <Typography variant=\"h6\" sx={{ fontWeight: 'bold' }}>\r\n                    {reservation.space} - {reservation.resource}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\">\r\n                    {`Le ${DateTime.fromISO(reservation.date).toLocaleString(DateTime.DATE_FULL)} à ${DateTime.fromISO(reservation.time).toLocaleString(DateTime.TIME_SIMPLE)}`}\r\n                  </Typography>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          ))\r\n        )}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ReservationList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}